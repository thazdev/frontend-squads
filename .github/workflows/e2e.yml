name: e2e-smoke
on: { pull_request: { branches: [main] } }

jobs:
  e2e:
    runs-on: ubuntu-latest

    services:
      arango:
        image: arangodb:latest
        env: { ARANGO_ROOT_PASSWORD: root }
        ports: [8529:8529]

    steps:
    - uses: actions/checkout@v4

    # pnpm + Node + caches
    - uses: pnpm/action-setup@v3
      with: { version: 8 }
    - uses: actions/setup-node@v3
      with: { node-version: 20 }
    - uses: actions/cache@v4
      with:
        path: ~/.local/share/pnpm/store/v3
        key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
        restore-keys: pnpm-${{ runner.os }}-
    - uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: pw-${{ runner.os }}-1.42.1

    - run: pnpm install --no-frozen-lockfile
    - run: PW_BRANCH=chromium pnpm exec playwright install chromium
      env: { PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS: 1 }

    # backend
    - run: |
        git clone --depth 1 https://github.com/thazdev/backend-squads.git backend
        cd backend && pnpm install --no-frozen-lockfile

    # seed
    - run: |
        for col in users squads tasks; do
          curl -s -u root:root -X POST http://localhost:8529/_api/collection \
            -H 'Content-Type: application/json' -d "{\"name\":\"$col\"}" || true
        done

    # start backend
    - working-directory: backend
      name: Start backend
      run: |
        pnpm exec ts-node --transpile-only src/index.ts >/tmp/back.log 2>&1 &
        for i in {1..15}; do nc -z localhost 4000 && exit 0; sleep 2; done
        echo "::error::Backend não subiu"; cat /tmp/back.log; exit 1

    # start Vite dev
    - name: Start frontend (Vite dev)
      run: |
        pnpm exec vite --host --port 5173 >/tmp/vite.log 2>&1 &
        for i in {1..15}; do nc -z localhost 5173 && exit 0; sleep 2; done
        echo "::error::Vite não subiu"; cat /tmp/vite.log; exit 1

    # smoke tests: dot + json
    - name: Run smoke tests (quiet)
      run: |
        pnpm exec playwright test tests/specs/smoke.spec.ts \
          --reporter=dot,github --quiet | tee $RUNNER_TEMP/test-output.txt

        pnpm exec playwright test tests/specs/smoke.spec.ts \
          --reporter=json=play-result.json || true

    # artefato JSON
    - uses: actions/upload-artifact@v4
      with:
        name: playwright-json
        path: play-result.json
        retention-days: 5

    # summary
    - name: Summary 🎯
      if: always()
      run: |
        node - <<'NODE' > /tmp/summary.md
        const fs = require('fs');
        let data;
        try { data = JSON.parse(fs.readFileSync('play-result.json','utf8')); }
        catch { console.log('## 🧪 Smoke-tests\nJSON não encontrado'); process.exit(0); }

        let passed = 0;
        const fails = [];
        for (const s of data.suites||[])
         for (const sp of s.specs||[])
           for (const t of sp.tests||[]) {
             if (t.status==='passed') passed++;
             else if (t.status==='failed') {
               const msg = (t.error?.message||'').split('\n')[0];
               fails.push({title: sp.title, msg});
             }
           }

        console.log('## 🧪 Smoke-tests');
        console.log(`- ✅  Passed: **${passed}**`);
        console.log(`- ❌  Failed: **${fails.length}**\n`);
        if (fails.length){
         console.log('<details><summary>⛔ Failed tests</summary>');
          fails.forEach(f=>console.log(`- **${f.title}** → ${f.msg}`));
          console.log('</details>');
        }
        console.log('\n🔗 Artefato JSON completo: _playwright-json_');
        NODE
                cat /tmp/summary.md >> "$GITHUB_STEP_SUMMARY"
