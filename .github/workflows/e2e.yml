name: e2e-smoke

on:
  pull_request:
    branches: [main]

jobs:
  e2e:
    runs-on: ubuntu-latest

    services:
      arango:
        image: arangodb:latest
        env: { ARANGO_ROOT_PASSWORD: root }
        ports: [8529:8529]

    steps:
    # ── checkout
    - uses: actions/checkout@v4

    # ── pnpm + Node + cache da store
    - uses: pnpm/action-setup@v3
      with: { version: 8 }
    - uses: actions/setup-node@v3
      with: { node-version: 20 }
    - uses: actions/cache@v4
      with:
        path: ~/.local/share/pnpm/store/v3
        key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
        restore-keys: pnpm-${{ runner.os }}-

    # ── cache do Chromium
    - uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: pw-${{ runner.os }}-1.42.1

    # ── deps do frontend
    - run: pnpm install --no-frozen-lockfile

    # ── instala apenas Chromium
    - run: PW_BRANCH=chromium pnpm exec playwright install chromium
      env: { PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS: 1 }

    # ── clone + deps backend
    - name: Clone + install backend
      run: |
        git clone --depth 1 https://github.com/thazdev/backend-squads.git backend
        cd backend && pnpm install --no-frozen-lockfile

    # ── seed coleções
    - run: |
        for col in users squads tasks; do
          curl -s -u root:root -X POST http://localhost:8529/_api/collection \
               -H 'Content-Type: application/json' -d "{\"name\":\"$col\"}" || true
        done

    # ── start backend
    - name: Start backend
      working-directory: backend
      run: |
        pnpm exec ts-node --transpile-only src/index.ts >/tmp/back.log 2>&1 &
        for i in {1..15}; do nc -z localhost 4000 && exit 0; sleep 2; done
        echo "::error::Backend não subiu"; cat /tmp/back.log; exit 1

    # ── start Vite dev
    - name: Start frontend (Vite dev)
      run: |
        pnpm exec vite --host --port 5173 >/tmp/vite.log 2>&1 &
        for i in {1..15}; do nc -z localhost 5173 && exit 0; sleep 2; done
        echo "::error::Vite não subiu"; cat /tmp/vite.log; exit 1

    # ── smoke tests – 1ª vez: saída curta; 2ª vez: JSON
    - name: Run smoke tests (quiet)
      run: |
        pnpm exec playwright test tests/specs/smoke.spec.ts \
          --reporter=dot,github --quiet \
          | tee $RUNNER_TEMP/test-output.txt

        pnpm exec playwright test tests/specs/smoke.spec.ts \
          --reporter=json > play-result.json 2>/dev/null || true

    # ── artefato JSON para IA/bots
    - uses: actions/upload-artifact@v4
      with:
        name: playwright-json
        path: play-result.json
        retention-days: 5

    # ── resumo enxuto + mensagem de erro
    - name: Summary 🎯
      if: always()
      run: |
        node - <<'JS'
        const fs = require('fs');
        const r  = JSON.parse(fs.readFileSync('play-result.json','utf8'));
        const passed = r.suites.flatMap(s=>s.specs).filter(sp=>sp.tests[0].status==='passed').length;
        const failed = r.suites.flatMap(s=>s.specs).filter(sp=>sp.tests[0].status==='failed');
        console.log(`## 🧪 Smoke-tests\n- ✅  Passed: **${passed}**\n- ❌  Failed: **${failed.length}**\n`);
        if (failed.length){
          console.log('<details><summary>⛔ Failed tests</summary>');
          failed.forEach(f=>console.log(`- **${f.title}** → ${f.tests[0].results[0].error.message.split('\\n')[0]}`));
          console.log('</details>');
        }
        JS >> $GITHUB_STEP_SUMMARY
