name: E2E Smoke Tests

on:
  pull_request:
    branches: [main]

jobs:
  e2e:
    runs-on: ubuntu-latest

    # ArangoDB como service, **sem** health-check (vamos esperar via step)
    services:
      arango:
        image: arangodb:latest
        env:
          ARANGO_ROOT_PASSWORD: root
        ports:
          - 8529:8529

    steps:
      # 1. Checkout + pnpm + Node
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with: { version: 8 }
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm

      # 2. Instala deps do frontend
      - run: pnpm install --no-frozen-lockfile
      - run: pnpm exec playwright install --with-deps

      # 3. Clona e instala backend
      - run: git clone --depth 1 https://github.com/thazdev/backend-squads.git backend
      - run: pnpm install --no-frozen-lockfile
        working-directory: backend

      # 4. Espera Arango ficar acessível
      - run: npx wait-on tcp:8529 --timeout 120000

      # 5. Seed: cria DB e coleções
      - name: Seed ArangoDB
        run: |
          docker run --rm --network host arangodb arangosh \
            --server.endpoint tcp://127.0.0.1:8529 \
            --server.password root \
            --javascript.execute <<'JS'
              const db = require('@arangodb').db;
              if (!db._databases().includes('squads')) db._createDatabase('squads');
              db._useDatabase('squads');
              ['users','squads','tasks'].forEach(c => { if (!db._collection(c)) db._create(c); });
            JS

      # 6. Sobe backend (porta 4000)
      - run: pnpm exec ts-node --transpile-only src/index.ts &
        working-directory: backend
        env:
          PORT: 4000
          ARANGO_URL: http://localhost:8529
          ARANGO_DATABASE: squads
          ARANGO_USER: root
          ARANGO_PASSWORD: root
          JWT_SECRET: test
      - run: npx wait-on tcp:4000

      # 7. Build + preview do Vite (porta 5173)
      - run: pnpm run build && pnpm exec vite preview --port 5173 &
      - run: npx wait-on http://localhost:5173

      # 8. Executa smoke-tests
      - run: pnpm exec playwright test tests/specs --grep @smoke --reporter=list

      # 9. Logs do Arango em caso de falha
      - if: failure()
        run: docker logs $(docker ps -qf "ancestor=arangodb:latest") || true
