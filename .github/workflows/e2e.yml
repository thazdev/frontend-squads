name: E2E Smoke Tests

on:
  pull_request:
    branches: [main]

jobs:
  smoke:
    runs-on: ubuntu-latest

    env:            # vari√°veis reutilizadas
      PORT: 4000
      ARANGO_URL: http://localhost:8529
      ARANGO_DATABASE: squads
      ARANGO_USER: root
      ARANGO_PASSWORD: root
      JWT_SECRET: 0r32ff1k0sf019r34g

    steps:
    - uses: actions/checkout@v4

    # ----------------- toolchain -----------------
    - uses: pnpm/action-setup@v3
      with: { version: 8 }

    - uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: pnpm

    # ----------------- frontend -----------------
    - name: ‚¨áÔ∏è Install frontend deps
      run: pnpm install --no-frozen-lockfile

    # ----------------- backend -----------------
    - name: ‚¨áÔ∏è Clone backend
      run: git clone https://github.com/thazdev/backend-squads.git ../backend

    - name: ‚¨áÔ∏è Install backend deps
      run: pnpm install --no-frozen-lockfile
      working-directory: ../backend

    # ----------------- database -----------------
    - name: üêü Start ArangoDB
      run: |
        docker run -d --name arango \
          -e ARANGO_ROOT_PASSWORD=$ARANGO_PASSWORD \
          -p 8529:8529 arangodb
        npx wait-on tcp:8529 --timeout 120000
        docker exec arango bash -c \
          "arangosh --server.password $ARANGO_PASSWORD \
            --javascript.execute-string 'try{db._createDatabase(\"$ARANGO_DATABASE\");}catch(e){}'"

    # ----------------- start backend -----------------
    - name: üü¢ Start backend
      run: |
        pnpm exec ts-node --transpile-only src/index.ts &
        npx wait-on tcp:$PORT --timeout 120000
      working-directory: ../backend

    # ----------------- start frontend (vite preview) -----------------
    - name: üñ•Ô∏è Start Vite
      run: |
        pnpm run build
        pnpm exec vite preview --port 5173 --strictPort &
        npx wait-on http://localhost:5173 --timeout 120000

    # ----------------- run tests -----------------
    - name: üöÄ Run Playwright smoke tests
      run: pnpm exec playwright test tests/specs --grep @smoke --reporter=html,json

    # ----------------- artefacts / logs -----------------
    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report
        retention-days: 7

    - name: üìÑ Backend logs on failure
      if: failure()
      run: cat ../backend/backend.log || true
