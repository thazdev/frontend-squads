name: E2E Smoke Tests
on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      arangodb:
        image: arangodb:3.11
        ports:
          - 8529:8529
        options: >-
          --health-cmd "curl --fail http://localhost:8529/_admin/server/availability || exit 1"
          --health-interval 15s
          --health-timeout 10s
          --health-retries 20
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "pnpm"

      - name: 📥 Instala dependências
        run: pnpm install --no-frozen-lockfile


      - name: 📥 Instala browsers Playwright
        run: pnpm exec playwright install --with-deps

      - name: 🔍 Changed files
        id: changes
        uses: tj-actions/changed-files@v42

      - name: ⬇️ Clone backend
        run: git clone https://github.com/thazdev/backend-squads.git ../backend

      - name: 📦 Install backend dependencies
        run: pnpm install
        working-directory: ../backend

      - name: 🟢 Start backend
        run: pnpm run dev &
        working-directory: ../backend
        env:
          PORT: 4000
          ARANGO_URL: http://localhost:8529
          ARANGO_DATABASE: squads
          JWT_SECRET: 0r32ff1k0sf019r34g

      - name: ⏳ Wait for backend
        run: npx wait-on http://localhost:4000 --timeout 120000

      - name: 🟢 Start Vite
        run: pnpm run dev &
        
      - name: ⏳ Wait for server
        run: npx wait-on http://localhost:5173

      - name: 🚀 Roda testes e gera JSON
        run: pnpm exec playwright test tests/specs --grep @smoke --reporter=html,json


      - name: 🧪 Analisa resultados e comenta no PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          CHANGED_FILES: ${{ steps.changes.outputs.all_changed_files }}
        run: pnpm exec tsx scripts/analyze-results.ts

      - name: 📄 Backend logs
        run: cat ../backend/backend.log || true

      - name: 📄 ArangoDB logs
        if: failure()
        run: docker logs $(docker ps -aqf "ancestor=arangodb:latest")
